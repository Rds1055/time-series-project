---
title: "Time Series Project"
author: "AnnaMarie Fernandes and Ryan Schaefer"
format: pdf
---

# Import Dependencies

```{r}
#| message: false
#| warning: false

library(astsa)
library(tidyverse)
library(tswge)
library(tseries)
library(forecast)
```


# Import Data

```{r}
nfl = read.csv("nfl_attendance.csv")

head(nfl)
```

# Format Data

```{r}
nfl.cumulative = nfl %>%
  group_by(year, week) %>%
  summarize(attendance = sum(weekly_attendance, na.rm = TRUE)) %>%
  ungroup()

head(nfl.cumulative)
```

# Plot Time Series

```{r}
nfl.cumulative.ts = ts(nfl.cumulative$attendance, start = c(2000, 1), frequency = 17)

tsplot(nfl.cumulative.ts)
```

# ACF, PACF and Spectral Density

```{r}
acf(nfl.cumulative.ts)
```

```{r}
pacf(nfl.cumulative.ts)
```


```{r}
specDensity = parzen.wge(nfl.cumulative.ts)
```

# Check for stationarity

```{r}
adf.test(nfl.cumulative.ts)
```

# Training/Testing Split

```{r}
nfl.training = nfl.cumulative %>%
  dplyr::filter(year < 2019)

nfl.training.ts = ts(nfl.training$attendance, start = c(2000, 1), frequency = 17)

nfl.testing = nfl.cumulative %>%
  dplyr::filter(year == 2019)

nfl.testing.ts = ts(nfl.testing$attendance, start = c(2019, 1), frequency = 17)
```

# Additive Holt Winters Model

```{r}
decomp.obj = decompose(nfl.training.ts) # uses moving average smoother
plot(decomp.obj)
```

```{r}
hwModel = HoltWinters(nfl.training.ts)
hwForecast = forecast(
  hwModel,
  h = 17
)

tsplot(
  nfl.cumulative.ts,
  main = "NFL Total Attendance Over Time Holt Winters Model",
  ylab = "NFL Total Attendance"
)
lines(hwForecast$fitted, col = "red")
lines(hwForecast$mean, col = "blue")

legend(
  "topleft", 
  legend = c("Observed", "Holt Winters Fit", "Holt Winters Forecast"), 
  lty = c(1, 1), 
  col = c("black", "red", "blue")
)
```

```{r}
acf(HW1_for$residuals, lag.max=20, na.action=na.pass)
Box.test(HW1_for$residuals, lag=20, type="Ljung-Box")
hist(HW1_for$residuals)
```

## Model Evaluation

```{r}
hwResiduals = hwForecast$mean - nfl.testing.ts
acf(hwResiduals)
Box.test(hwResiduals)
```


# Fit ARMA Model

```{r}
#| warning: false

types = c("aic", "bic", "aicc")
selections = list()

for (i in 1:length(types)) {
    output = aic.wge(nfl.cumulative.ts, p = 0:10, q = 0:10, type = types[i])
    selections[[i]] = output
    print(paste("Type: ", types[i], ", AR Order: ", output$p, ", MA Order: ", output$q, sep = ""))
}
```

```{r}
selections[[1]]
```

```{r}
factor.wge(phi = selections[[1]]$phi, theta = selections[[1]]$theta)
```

# Additive Seasonal Model

```{r}

```



# Forecasting

```{r}
forecast = fore.arma.wge(nfl.cumulative.ts, phi = selections[[1]]$phi, theta = selections[[1]]$theta, n.ahead = 17, limits = TRUE)
```

```{r}
forecast2 = sarima.for(nfl.cumulative.ts, n.ahead = 17, p = 6, q = 7, d = 0, plot.all = TRUE)
```

```{r}
forecast3 = fore.arma.wge(nfl.cumulative.ts, phi = selections[[1]]$phi, theta = selections[[1]]$theta, n.ahead = 17, limits = TRUE, lastn = TRUE)
```

```{r}
forecast3$rmse
```

