---
title: "Time Series Project"
author: "AnnaMarie Fernandes and Ryan Schaefer"
format: pdf
---

# Import Dependencies

```{r}
#| message: false
#| warning: false

library(astsa)
library(tidyverse)
library(tswge)
library(tseries)
library(forecast)
```


# Import Data

```{r}
nfl = read.csv("nfl_attendance.csv")

head(nfl)
```

# Format Data

```{r}
nfl.cumulative = nfl %>%
  group_by(year, week) %>%
  summarize(attendance = sum(weekly_attendance, na.rm = TRUE)) %>%
  ungroup()

head(nfl.cumulative)
```

# Plot Time Series

```{r}
nfl.cumulative.ts = ts(nfl.cumulative$attendance, start = c(2000, 1), frequency = 17)

tsplot(nfl.cumulative.ts)
```

# ACF, PACF and Spectral Density

```{r}
acf(nfl.cumulative.ts)
```

```{r}
pacf(nfl.cumulative.ts)
```


```{r}
specDensity = parzen.wge(nfl.cumulative.ts)
```

# Check for stationarity

```{r}
adf.test(nfl.cumulative.ts)
```

# Training/Testing Split

```{r}
nfl.training = nfl.cumulative %>%
  dplyr::filter(year < 2019)

nfl.training.ts = ts(nfl.training$attendance, start = c(2000, 1), frequency = 17)

nfl.testing = nfl.cumulative %>%
  dplyr::filter(year == 2019)

nfl.testing.ts = ts(nfl.testing$attendance, start = c(2019, 1), frequency = 17)
```

# sarima 

```{r}
sarima.for(nfl.cumulative.ts , n.ahead = 17, p=6,d=0,q=7,P=0,D=1,Q=0,S=17 )
```

# Holt Winters Model

## Additive

### Fit Model

```{r}
hwModel = HoltWinters(nfl.training.ts, seasonal = "additive")
hwForecast = forecast(
  hwModel,
  h = 17
)

tsplot(
  nfl.cumulative.ts,
  main = "NFL Total Attendance Over Time Holt Winters Additive Model",
  ylab = "NFL Total Attendance"
)
lines(hwForecast$fitted, col = "red")
lines(hwForecast$mean, col = "blue")

legend(
  "topleft", 
  legend = c("Observed", "Holt Winters Fit", "Holt Winters Additive Forecast"), 
  lty = c(1, 1), 
  col = c("black", "red", "blue")
)

rmse(nfl.testing$attendance, hwForecast$mean)
```

```{r}
hwModel2 = HoltWinters(nfl.training.ts, seasonal = "multiplicative")
hwForecast2 = forecast(
  hwModel,
  h = 17
)

tsplot(
  nfl.cumulative.ts,
  main = "NFL Total Attendance Over Time Holt Winters Multiplicative Model",
  ylab = "NFL Total Attendance"
)
lines(hwForecast2$fitted, col = "red")
lines(hwForecast2$mean, col = "blue")

legend(
  "topleft", 
  legend = c("Observed", "Holt Winters Mult. Fit", "Holt Winters Mult. Forecast"), 
  lty = c(1, 1), 
  col = c("black", "red", "blue")
)

rmse(nfl.testing$attendance, hwForecast2$mean)
```

### Model Evaluation

```{r}
hwResiduals = hwForecast$mean - nfl.testing.ts
acf(hwResiduals)
Box.test(hwResiduals)
```

## Multiplicative

### Fit Model

```{r}
hwModel2 = HoltWinters(nfl.training.ts, seasonal = "multiplicative")
hwForecast2 = forecast(
  hwModel,
  h = 17
)

tsplot(
  nfl.cumulative.ts,
  main = "NFL Total Attendance Over Time Holt Winters Multiplicative Model",
  ylab = "NFL Total Attendance"
)
lines(hwForecast2$fitted, col = "red")
lines(hwForecast2$mean, col = "blue")

legend(
  "topleft", 
  legend = c("Observed", "Holt Winters Mult. Fit", "Holt Winters Mult. Forecast"), 
  lty = c(1, 1), 
  col = c("black", "red", "blue")
)

rmse(nfl.testing$attendance, hwForecast2$mean)
```

### Model Evaluation

```{r}
hwResiduals = hwForecast$mean - nfl.testing.ts
acf(hwResiduals)
Box.test(hwResiduals)
```

# Linear Regression

## Fit Model

```{r}
nfl.cumulative2 = nfl.cumulative[18:nrow(nfl.cumulative),] %>%
  mutate(
    t = 18:nrow(nfl.cumulative),
    sin17 = sin((2 * pi * t) / 17),
    cos17 = cos((2 * pi * t) / 17),
    attendance.lag = nfl.cumulative$attendance[t - 17]
  )

head(nfl.cumulative2)
```

```{r}
nfl.cumulative2.training = nfl.cumulative2 %>%
  filter(year < 2019)

nfl.cumulative2.testing = nfl.cumulative2 %>%
  filter(year == 2019)

lmModel = lm(attendance ~ sin17 + cos17 + attendance.lag, data = nfl.cumulative2.training)

summary(lmModel)
```

```{r}
acf(
  model1$residuals,
  main = "Autocorrelation of Linear Regression Residuals"
)
```

```{r}
lmModel.predict = predict(lmModel, newdata = nfl.cumulative2.testing)

ts.lmModel = ts(lmModel$fitted.values, start = c(2001, 1), frequency = 17)
ts.lmPredict = ts(lmModel, start = c(2019, 1), frequency = 17)

tsplot(
  nfl.cumulative.ts,
  main = "NFL Total Attendance Over Time Holt Winters Multiplicative Model",
  ylab = "NFL Total Attendance"
)
lines(hwForecast2$fitted, col = "red")
lines(hwForecast2$mean, col = "blue")

legend(
  "topleft", 
  legend = c("Observed", "Linear Regression Fit", "Linear Regression Forecast"), 
  lty = 1, 
  col = c("black", "red", "blue")
)
```

## Model Evalutation

```{r}
acf(hwResiduals)
Box.test(hwResiduals)
rmse(nfl.cumulative2.testing$attendance, lmModel.predict)
```




# Fit ARMA Model

```{r}
#| warning: false

# types = c("aic", "bic", "aicc")
# selections = list()
# 
# for (i in 1:length(types)) {
#     output = aic.wge(nfl.cumulative.ts, p = 0:10, q = 0:10, type = types[i])
#     selections[[i]] = output
#     print(paste("Type: ", types[i], ", AR Order: ", output$p, ", MA Order: ", output$q, sep = ""))
# }

selections = list()
selections[[1]] = aic.wge(nfl.cumulative.ts, p = 0:10, q = 0:10, type = "aic")
print(paste("AR Order: ", selections[[1]]$p, ", MA Order: ", selections[[1]]$q, sep = ""))
```

```{r}
selections[[1]]
```

```{r}
factor.wge(phi = selections[[1]]$phi, theta = selections[[1]]$theta)
```




# Forecasting

```{r}
forecast = fore.arma.wge(nfl.cumulative.ts, phi = selections[[1]]$phi, theta = selections[[1]]$theta, n.ahead = 17, limits = TRUE)
```

```{r}
forecast2 = sarima.for(nfl.cumulative.ts, n.ahead = 17, p = 6, q = 7, d = 0, plot.all = TRUE)
```

```{r}
forecast3 = fore.arma.wge(nfl.cumulative.ts, phi = selections[[1]]$phi, theta = selections[[1]]$theta, n.ahead = 17, limits = TRUE, lastn = TRUE)
```

```{r}
forecast3$rmse
```

